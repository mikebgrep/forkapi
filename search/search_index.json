{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"ForkAPI","text":""},{"location":"#a-lightweight-restapi-client-that-manage-food-recipies-easily","title":"A lightweight RestAPI client that manage food recipies easily","text":"<p> ForkAPI is a Django drf based project which can be easily integrated as a backend service for a  mobile application or web application that can display, add, favorite a food recipies. The api is designed to be simple to use with build in Dashboard panel to add recipies manual or using the provided endpoints (views in Django).</p> <p>You can benefit for future support of the project.</p> <p>Get Started Installation</p>"},{"location":"Installation/","title":"Installation","text":"<p>To install the API you need a Python 3.x installed also venv module and pip.  Here will be covered two types of installation for debugging and for production.</p>"},{"location":"Installation/#mutual-steps","title":"Mutual Steps","text":"<p>Clone the repository with the command <pre><code>$ git clone https://github.com/mikebgrep/forkapi\n</code></pre> Rename <code>.env.example</code> to <code>.env</code> In linux <pre><code>$ cd forkapi\n$ mv .env.example .env \n</code></pre> Enter all needed environment variables in <code>.env</code> file.</p> <ul> <li><code>PAGINATION_PAGE_SIZE</code> is used for pagination used in the API certain endpoint.</li> <li><code>DJANGO_SECRET</code> you can generate the secret online -&gt; link  or with the following command if you have installed django on the machine <pre><code>$ python -c 'from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())'\n</code></pre></li> <li><code>X_AUTH_HEADER</code> also you can generate random UUID online that will be used for authentication  for the read only endpoint. Example header <code>261ec18d-0e81-4073-8d9e-b34a7a1e5e06</code> (Don`t use it this is for demo purpose)</li> </ul>"},{"location":"Installation/#installing-locally-debug-mode","title":"Installing locally (Debug mode)","text":"<p>You can create a virtual environment and click of the API. Note replace the 3.x with actual Python version <pre><code>$ python3.x -m venv .venv &amp;&amp; source .venv/bin/activate\n$ pip install -r requirements.txt\n</code></pre></p> <p>Make the needed migrations so Django can create sqlite database file with tables. <pre><code>$ cd forkapi\n$ python manage.py makemigrations authentication\n$ python manage.py makemigrations recipe\n$ python manage.py migrate\n</code></pre></p> <p>At this point everything should be ok, and you can start the server. </p> <p><pre><code>$ python manage.py runserver\n</code></pre> You can access the dashboard admin panel on <code>localhost:8000</code>. In this mode you can use it locally if in debug mode which you can change in <code>/forkapi/settings.py</code> file line <code>27</code></p>"},{"location":"Installation/#installing-in-docker-container-production-ssl","title":"Installing in Docker container (Production SSL)","text":"<p>To installing in Docker container follow the steps bellow. </p> <p>Warning</p> <p>For Raspberry Pi with Raspbian OS make sure to uncomment the packages in the main Dockerfile in line <code>16</code> and replace the method from <code>pull</code> from registry to <code>build</code> from Dockerfile located at the root folder. This should be happen in the <code>docker-compose.yml</code> file line <code>25</code>.</p> <ul> <li>Fist step is to clone the repo. The needed files are in <code>nginx</code> folder, <code>.env</code> file and <code>docker-compose.yml</code> file.</li> <li>Next step is setting up the <code>fullchain.pem</code> and <code>privkey.pem</code> files needed for the ssl settings in <code>nginx</code>.</li> <li>After you obtain ssl certificates for your domain you need to copy them in the <code>nginx/ssl</code> folder.</li> <li>Then add environment variable (if you didn't add it already) in <code>.env</code> file for <code>DOMAIN_NAME_NGINX</code> that should be used  with your actual domain name in the <code>nginx/forkapi-ssl.nginx.template</code> configuration file.</li> <li>Next uncomment the commented lines <code>8</code>, <code>12</code> and <code>21</code> in the <code>docker-compose.yml</code> and comment lines <code>7</code> and <code>22</code>.</li> <li> <p>That all you need to run the <code>docker compose up</code> command and the API will be deployed on the server instance or locally on your machine. <pre><code>$ docker compose up\n</code></pre></p> </li> <li> <p>Access the admin dashboard at <code>your-domain:80</code> or <code>your-domain:443</code></p> </li> </ul> <p>Info</p> <p>I will not include steps for setting the domain name servers on this as you can follow the official documentation on your server or the Raspberry Pi documentation.</p>"},{"location":"Installation/#installing-in-docker-container-production-no-ssl","title":"Installing in Docker container (Production No SSL)","text":"<ul> <li>Fist step is to clone the repo. The needed files are in <code>nginx</code> folder, <code>.env</code> file and <code>docker-compose.yml</code> file.</li> <li>Add environment variable (if you didn't add it already) in <code>.env</code> file for <code>DOMAIN_NAME_NGINX</code> that should be used  with your actual domain name in the <code>nginx/forkapi.nginx.template</code> configuration file.</li> <li>That all you need to run the <code>docker compose up</code> command and the API will be deployed on the server instance or locally on your machine. <pre><code>$ docker compose up\n</code></pre></li> </ul> <p>Note</p> <p>This method is the prefered choice if your server already provide ssl connection by default as Digital ocean do for their apps.</p> <p>Follow next step to check how you can and must be made your first request.</p>"},{"location":"clients/","title":"Clients","text":"<p>You can use already build FE clients together with the API. Currently, there are only a Web Application FE written in Python that can be deployed with Docker.</p>"},{"location":"clients/#web-application-overview","title":"Web application overview","text":"<p>You can follow the link of the official GitHub repository of the project here \u27a1 follow me</p> <p>Note</p> <p>The FE client installation is independant from the ForkApi installation you don't need to follow the API installation instructions!</p>"},{"location":"clients/#installation","title":"Installation","text":"<p>Info</p> <ul> <li>To install the application you can use the SSL certificates that you own for your domain or just using domain without SSL. </li> <li>The no SSL method can be handy when there an SSL certs setup by default by the hosting service or you just use the application locally.</li> </ul>"},{"location":"clients/#lets-begin","title":"Lets begin","text":"<ol> <li>You need to add all environment variables in <code>.env</code> file after you copied it from <code>.env.example</code>.</li> </ol> .env <pre><code># Secrets more info in documentation\nDJANGO_SECRET=\nX_AUTH_HEADER=\n\n# URL for the BE API requests must start with protocol http:// or https://\nSERVICE_BASE_URL=\n\n# Smtp settings\nEMAIL_HOST=\nEMAIL_HOST_USER=\nEMAIL_HOST_PASSWORD=\nEMAIL_PORT=\nEMAIL_USE_TLS=\n\n###### Domains ######\n# ! This two must be without protocol\n# localhost for homeserver can be used\n\n# Domain name for the fork.recipes application\n# ! subdomain should be used as api.host.\nDOMAIN_NAME_NGINX=\n\n# Domain name for the forkapi be application\nDOMAIN_NAME_NGINX_API=\n\n# Pagination for the recipe search endpoints\nPAGINATION_PAGE_SIZE=\n</code></pre> <p>There are comments for each section, but I will explain quick.</p> <ul> <li><code>DJANGO_SECRET</code> and <code>X_AUTH_HEADER</code> are mandatory as Django secret can be generated online from this tool \u27a1 tool and the header should be something difficult to guest as a GUID  \u27a1 tool</li> <li><code>SERVICE_BASE_URL</code> is the url that is used from the front end to communicate with the BE it's same as <code>DOMAIN_NAME_NGINX_API</code> but with <code>http://</code> or <code>https://</code> protocol.</li> <li>Next are <code>SMTP settings</code> you can follow your email provider for the values I can say that only is used for reset password functionality so you may be will not need it</li> <li><code>Domains</code> section is for the <code>NGINX</code> proxy configuration files <code>DOMAIN_NAME_NGINX</code> should be the base url of the fork.recipes application, <code>DOMAIN_NAME_NGINX_API</code> should be the subdomain normally starting with <code>api.</code> for the BE <code>forkapi</code> service.</li> </ul> <p>Note</p> <p><code>DOMAIN_NAME_NGINX</code> and <code>DOMAIN_NAME_NGINX_API</code> shouldn't include protocol as <code>http://</code> or <code>https://</code> they should be plain. If you want to setup the application only for local use and you doesn't have a domain you can add subdomain in <code>/etc/hosts</code> for the local host like this (for Linux): <pre><code>    127.0.0.1    example.com\n    127.0.0.1    subdomain.example.com \n</code></pre></p> <p>2.Run docker compose</p> No SSLSSL <p>You are all set for setup without SSL installation you just need to run the docker compose file with the following command in the root of the project. <pre><code>$ docker compose up\n</code></pre> This command will install NGINX, ForkAPI and the Fork.Recipes.</p> <p>You need to have valid certificates for your domain and subdomain.This files should be copied in the <code>nginx/ssl</code> folder. The files are <code>fullchain.pem</code> and <code>privkey.pem</code> (names need to be the same). At this step you must open the <code>docker-compose.yml</code> file and uncomment all commented sections on lines <code>6</code>, <code>10</code> and <code>14</code>. Don't forget to comment the others on lines <code>5</code> and <code>15</code>.  That all run the docker compose and wait the docker do his job. <pre><code>$ docker compose up\n</code></pre></p> <p>3.You can access the API admin panel and the FE from the links <code>DOMAIN_NAME_NGINX</code> and <code>DOMAIN_NAME_NGINX_API</code> that was setup  in the <code>.env</code> file </p>"},{"location":"clients/#final-thoughts","title":"Final thoughts","text":"<p>There a number of different options you can do as using different domain for the BE that is not subdomain of the FE domain name. At this stage you can use the application and if you have any questions you can ask them in the repository. fork.recipes</p>"},{"location":"contribution/","title":"Contribution","text":"<p>Any contribution is welcomed and here the instructions to do so:</p> <ol> <li>Fork the repository </li> <li>Work on master branch if the changes are not major or create a new branch for major updates</li> <li>Make your changes</li> <li>Add additional test cases if the change is not covered (recommended)</li> <li>Run tests with command <code>&gt; tox</code> from the root folder where the <code>tox.ini</code> files is located</li> <li>Open Pull request</li> <li>Grab a coffe or a tea \u2027\u208a\u02da \u22c5 \u2615\ufe0f\ud83c\udf75 \u2027\u208a\u02da \u22c5 and relax \ud83d\ude0c</li> </ol> <p>Info</p> <p>For major futures you can open a issue first and then branch that should be named <code>future/name-of-the-change</code></p>"},{"location":"contribution/#desired-modifications","title":"Desired modifications","text":"<p>Note</p> <p>If you decide to contribute and you have experience with Django a good starting point will be to rework the Django Admin Panel with more fancy look and feel. </p>"},{"location":"first-request/","title":"Make your first request","text":"<p>After the API is deployed you need to create a superuser for the admin dashboard.  This can be done ether with Django <code>manage.py</code> <code>python manage.py createsuperuser</code> command or using an API Client as Postman or curl CLI tool. </p> <p>I will present the method with the curl as more convenient method but you can use and Postman.</p>"},{"location":"first-request/#creating-superuser","title":"Creating superuser","text":"<p>To create a superuser for login into the Admin Dashboard use the following curl command in you terminal or powershell.</p> v2.0v1.0 <p><pre><code>curl --location --request POST --header \"Content-type: application/json\" --header \"X-Auth-Header: X_AUTH_HEADER\"  --data-raw '{\"username\":\"your_username\",\"email\":\"your_email\",\"password\":\"you-password\", \"is_superuser\": true}' 'https://your-domain-name/api/auth/signup'\n</code></pre> Take a note that you need to change</p> <ul> <li><code>X_AUTH_HEADER</code> with the value from <code>.env</code> file</li> <li><code>your-username</code>, <code>your-email</code> and <code>your-password</code> with valid data</li> <li><code>https://your-domain-name</code> with actual domain name </li> </ul> <p><pre><code>curl --location --request POST --header \"Content-type: application/json\" --header \"X-Auth-Header: X_AUTH_HEADER\"  --data-raw '{\"username\":\"your_username\",\"password\":\"you-password\", \"is_superuser\": true}' 'https://your-domain-name/api/auth/signup'\n</code></pre> Take a note that you need to change</p> <ul> <li><code>X_AUTH_HEADER</code> with the value from <code>.env</code> file</li> <li><code>your-username</code> and <code>your-password</code> with valid data</li> <li><code>https://your-domain-name</code> with actual domain name </li> </ul> <p>When you execute the curl command the admin user will be created you can log in to the admin dashboard from the base url of the api (the domain name).</p>"},{"location":"rest-references/","title":"Rest Reference","text":""},{"location":"rest-references/#restapi-reference","title":"RestAPI reference","text":""},{"location":"rest-references/#on-this-page-you-can-check-the-restapi-endpoints","title":"On this page you can check the RestAPI endpoints.","text":"<p>Note</p> <p>The API has build in csrf protection you may need to attach Cookie with value csrftoken=token to work proparly</p> v2.0v1.0 <p></p> <p></p>"},{"location":"rest-references/#authentication","title":"Authentication","text":""},{"location":"rest-references/#create-admin-user","title":"Create admin user","text":"POST /api/auth/signup"},{"location":"rest-references/#payload","title":"Payload","text":"authentication.UserSerializer<pre><code>{\n    \"username\": \"username\",\n    \"password\": \"password\",\n    \"email\": \"email\",\n    \"is_superuser\": true\n}\n</code></pre>"},{"location":"rest-references/#headers","title":"Headers","text":"name type data type description <code>X-Auth-Header</code> <code>required</code> <code>UUID</code> <code>Header used for authentication with the API</code>"},{"location":"rest-references/#responses","title":"Responses","text":"http code content-type response <code>201</code> <code>application/json</code> <code>User created successfully</code> <code>400</code> <code>application/json</code> <code>{\"username\":[\"user with this username already exists.\"]}</code>"},{"location":"rest-references/#example-curl","title":"Example cURL","text":"<pre><code> curl --location 'host/api/auth/signup' --header 'X-Auth-Header: X_AUTH_HEADER' --header 'Content-Type: application/json' --data '{\"username\":\"username\",\"password\":\"password\",\"email\":\"email\",\"is_superuser\":true}'\n</code></pre>"},{"location":"rest-references/#obtain-access-token","title":"Obtain access token","text":"POST /api/auth/token"},{"location":"rest-references/#payload_1","title":"Payload","text":"authentication.UserSerializer<pre><code>{\n    \"email\": \"email\",\n    \"password\": \"password\"\n}\n</code></pre>"},{"location":"rest-references/#headers_1","title":"Headers","text":"name type data type description <code>X-Auth-Header</code> <code>required</code> <code>UUID</code> <code>Header used for authentication with the API</code>"},{"location":"rest-references/#responses_1","title":"Responses","text":"http code content-type response <code>200</code> <code>application/json</code> <code>{\"token\":\"token\",\"user\":{\"username\":\"username\",\"email\":\"email\",\"is_superuser\":true}}</code> <code>404</code> <code>application/json</code> <code>{\"detail\":\"No User matches the given query.\"}</code> <code>403</code> <code>application/json</code> <code>{\"detail\": \"You must use authentication header\"}</code>"},{"location":"rest-references/#example-curl_1","title":"Example cURL","text":"<pre><code> `curl --location 'host/api/auth/token' --header 'X-Auth-Header: X_AUTH_HEADER' --header 'Content-Type: application/json' --data '{\"email\":\"email\",\"password\":\"password\"}''\n</code></pre>"},{"location":"rest-references/#get-user-profile-info","title":"Get user profile info","text":"GET /api/auth/user/info"},{"location":"rest-references/#headers_2","title":"Headers","text":"name type data type description <code>Authorization</code> <code>required</code> <code>Access Token</code> <code>Token obtained from login endpoint</code>"},{"location":"rest-references/#responses_2","title":"Responses","text":"http code content-type response <code>200</code> <code>application/json</code> <code>{\"username\":\"username\",\"email\":\"email\",\"date_joined\":\"date\"}</code> <code>401</code> <code>application/json</code> <code>{\"detail\":\"Authentication credentials were not provided.\"}</code>"},{"location":"rest-references/#example-curl_2","title":"Example cURL","text":"<pre><code> curl --location 'localhost:8080/api/auth/user/info' --header 'Authorization: Token token_value' \n</code></pre>"},{"location":"rest-references/#change-user-password","title":"Change user password","text":"PUT /api/auth/user"},{"location":"rest-references/#payload_2","title":"Payload","text":"<pre><code>{\n    \"old_password\": \"password\",\n    \"new_password\": \"password\"\n}\n</code></pre>"},{"location":"rest-references/#headers_3","title":"Headers","text":"name type data type description <code>Authorization</code> <code>required</code> <code>Access Token</code> <code>Token obtained from login endpoint</code>"},{"location":"rest-references/#responses_3","title":"Responses","text":"http code content-type response <code>204</code> <code>application/json</code> <code>{}</code> <code>400</code> <code>application/json</code> <code>{\"message\": \"Old password does not match current password\"}</code> <code>403</code> <code>application/json</code> <code>{\"detail\": \"Authentication credentials were not provided.\"}</code>"},{"location":"rest-references/#example-curl_3","title":"Example cURL","text":"<pre><code> curl --location --request PUT 'host/api/auth/user' --header 'Authorization: Token token_value' --header 'Content-Type: application/json'  --data '{\"old_password\":\"old_password\",\"new_password\":\"new_password\"}'\n</code></pre>"},{"location":"rest-references/#update-user-email-and-username","title":"Update user email and username","text":"PATCH /api/auth/user Info <p>Individual fields can be updated only username or password.</p>"},{"location":"rest-references/#payload_3","title":"Payload","text":"authentication.UserSerializer<pre><code>{\n    \"username\": \"new_username\",\n    \"email\": \"new_email\"\n}\n</code></pre>"},{"location":"rest-references/#headers_4","title":"Headers","text":"name type data type description <code>Authorization</code> <code>required</code> <code>Access Token</code> <code>Token obtained from login endpoint</code>"},{"location":"rest-references/#responses_4","title":"Responses","text":"http code content-type response <code>200</code> <code>application/json</code> <code>{\"username\":\"new_username\",\"email\":\"new_email\",\"is_superuser\":true}</code> <code>400</code> <code>application/json</code> <code>{\"email\":[\"Enter a valid email address and password.\"]}</code> <code>403</code> <code>application/json</code> <code>{\"detail\": \"Authentication credentials were not provided.\"}</code>"},{"location":"rest-references/#example-curl_4","title":"Example cURL","text":"<pre><code> curl --location --request PATCH 'host/api/auth/user' --header 'Authorization: Token token_value'  --header 'Content-Type: application/json' --data-raw '{\"username\":\"new_username\",\"email\":\"new_email\"}'\n</code></pre>"},{"location":"rest-references/#delete-user-account","title":"Delete user account","text":"DELETE /api/auth/delete-account"},{"location":"rest-references/#headers_5","title":"Headers","text":"name type data type description <code>Authorization</code> <code>required</code> <code>Access Token</code> <code>Token obtained from login endpoint</code>"},{"location":"rest-references/#responses_5","title":"Responses","text":"http code content-type response <code>204</code> <code>application/json</code> <code>No Content</code> <code>403</code> <code>application/json</code> <code>{\"detail\": \"Authentication credentials were not provided.\"}</code>"},{"location":"rest-references/#example-curl_5","title":"Example cURL","text":"<pre><code> curl --location --request DELETE 'host/api/auth/delete-account' --header 'Authorization: Token token_value' \n</code></pre>"},{"location":"rest-references/#request-password-reset-token-for-user-account","title":"Request password reset token for user account","text":"POST /api/auth/password_reset"},{"location":"rest-references/#payload_4","title":"Payload","text":"authentication.ResetPasswordRequestSerializer<pre><code>{\n    \"email\": \"user_email\"\n}\n</code></pre>"},{"location":"rest-references/#headers_6","title":"Headers","text":"name type data type description <code>X-Auth-Header</code> <code>required</code> <code>UUID</code> <code>Header used for authentication with the API</code>"},{"location":"rest-references/#responses_6","title":"Responses","text":"http code content-type response <code>201</code> <code>application/json</code> <code>{\"token\":\"token_value\"}</code> <code>403</code> <code>application/json</code> <code>{\"detail\":\"You must use authentication header\"}</code> <code>404</code> <code>application/json</code> <code>{\"error\":\"User with provided email not found\"}</code>"},{"location":"rest-references/#example-curl_6","title":"Example cURL","text":"<pre><code> curl --location 'host/api/auth/password_reset' --header 'Content-Type: application/json' --header 'X-Auth-Header: auth_header_value'   --data-raw '{\"email\":\"user_email\"}' \n</code></pre>"},{"location":"rest-references/#change-user-password-with-token","title":"Change user password with token","text":"POST /api/auth/password_reset/reset <p>##### Parameters</p> name type data type description <code>token</code> <code>query (required)</code> <code>string</code> <code>Token obtained from POST /api/auth/password_reset</code>"},{"location":"rest-references/#payload_5","title":"Payload","text":"<pre><code>{\n    \"password\": \"new_password\",\n    \"confirm_password\": \"new_password\"\n}\n</code></pre>"},{"location":"rest-references/#responses_7","title":"Responses","text":"http code content-type response <code>204</code> <code>application/json</code> <code>No Content</code> <code>404</code> <code>application/json</code> <code>{\"detail\":\"No PasswordResetToken matches the given query.\"}}</code>"},{"location":"rest-references/#example-curl_7","title":"Example cURL","text":"<pre><code> curl --location 'host/api/auth/password_reset/reset?token=token_value' --header 'Content-Type: application/json'  --data '{\"password\":\"new_password\",\"confirm_password\":\"new_password\"}'\n</code></pre>"},{"location":"rest-references/#recipe","title":"Recipe","text":""},{"location":"rest-references/#search-for-recipes","title":"Search for recipes","text":"GET /api/recipe/home/"},{"location":"rest-references/#parameters","title":"Parameters","text":"name type data type description <code>search</code> <code>query (optional)</code> <code>string</code> <code>Part or fulll name of the recipe.Recipe object</code> <code>page</code> <code>query (optional)</code> <code>int</code> <code>Page number if there a mutilple pages result</code>"},{"location":"rest-references/#headers_7","title":"Headers","text":"name type data type description <code>X-Auth-Header</code> <code>required</code> <code>UUID</code> <code>Header used for authentication with the API</code>"},{"location":"rest-references/#responses_8","title":"Responses","text":"http code content-type response <code>200</code> <code>application/json</code> <code>{\"count\":int,\"next\":string,\"previous\":string,\"results\":[recipe.Recipe obj list]}</code> <code>403</code> <code>application/json</code> <code>{\"detail\":\"You must use authentication header\"}</code>"},{"location":"rest-references/#example-curl_8","title":"Example cURL","text":"<pre><code> curl --location 'http://host:port/api/recipe/home/?name=name&amp;page=1' --header 'X-Auth-Header: X_AUTH_HEADER\n</code></pre>"},{"location":"rest-references/#get-favorite-recipes","title":"Get favorite recipes","text":"GET /api/recipe/home/favorites/"},{"location":"rest-references/#headers_8","title":"Headers","text":"name type data type description <code>X-Auth-Header</code> <code>required</code> <code>UUID</code> <code>Header used for authentication with the API</code>"},{"location":"rest-references/#responses_9","title":"Responses","text":"http code content-type response <code>200</code> <code>application/json</code> <code>{\"count\":int,\"next\":string,\"previous\":string,\"results\":[recipe.Recipe obj list]}</code> <code>404</code> <code>application/json</code> <code>{\"detail\":\"No Recipe matches the given query.\"}</code> <code>403</code> <code>application/json</code> <code>{\"detail\":\"You must use authentication header\"}</code>"},{"location":"rest-references/#example-curl_9","title":"Example cURL","text":"<pre><code> curl --location 'http://host:port/api/recipe/home/favorites/' --header 'X-Auth-Header: X_AUTH_HEADER\n</code></pre>"},{"location":"rest-references/#get-trending-recipes","title":"Get trending recipes","text":"GET /api/recipe/trending"},{"location":"rest-references/#headers_9","title":"Headers","text":"name type data type description <code>X-Auth-Header</code> <code>required</code> <code>UUID</code> <code>Header used for authentication with the API</code>"},{"location":"rest-references/#responses_10","title":"Responses","text":"http code content-type response <code>200</code> <code>application/json</code> <code>[recipe.Recipe objects list]</code> <code>403</code> <code>application/json</code> <code>{\"detail\":\"You must use authentication header\"}</code>"},{"location":"rest-references/#example-curl_10","title":"Example cURL","text":"<pre><code> curl --location 'localhost:8080/api/recipe/trending' --header 'X-Auth-Header: X_AUTH_HEADER\n</code></pre>"},{"location":"rest-references/#search-for-recipes-preview","title":"Search for recipes preview","text":"GET /api/recipe/home/preview/"},{"location":"rest-references/#parameters_1","title":"Parameters","text":"name type data type description <code>search</code> <code>query (optional)</code> <code>string</code> <code>Part or fulll name of the recipe.Recipe object</code> <code>page</code> <code>query (optional)</code> <code>int</code> <code>Page number if there a mutilple pages result</code>"},{"location":"rest-references/#headers_10","title":"Headers","text":"name type data type description <code>X-Auth-Header</code> <code>required</code> <code>UUID</code> <code>Header used for authentication with the API</code>"},{"location":"rest-references/#responses_11","title":"Responses","text":"http code content-type response <code>200</code> <code>application/json</code> <code>{\"count\":int,\"next\":string,\"previous\":string,\"results\":[recipe.RecipePreviewSerializer obj list]}</code> <code>403</code> <code>application/json</code> <code>{\"detail\":\"You must use authentication header\"}</code>"},{"location":"rest-references/#example-curl_11","title":"Example cURL","text":"<pre><code> curl --location 'http://host:port/api/recipe/home/preview/?name=name&amp;page=1' --header 'X-Auth-Header: X_AUTH_HEADER\n</code></pre>"},{"location":"rest-references/#update-favorite-status","title":"Update favorite status","text":"PATCH /api/recipe/int:pk/favorite"},{"location":"rest-references/#parameters_2","title":"Parameters","text":"name type data type description <code>&lt;int:pk&gt;</code> <code>path (required)</code> <code>int</code> <code>Recipe primary key to be favorited or unfavorited</code>"},{"location":"rest-references/#headers_11","title":"Headers","text":"name type data type description <code>Authorization</code> <code>required</code> <code>Access Token</code> <code>Token obtained from login endpoint</code>"},{"location":"rest-references/#responses_12","title":"Responses","text":"http code content-type response <code>201</code> <code>application/json</code> <code>\"Success favorite recipe\"</code> <code>201</code> <code>application/json</code> <code>\"Success unfavorite recipe\"</code> <code>403</code> <code>application/json</code> `{\"detail\":\"You must use authentication header\"} <code>404</code> <code>application/json</code> <code>Not Found</code>"},{"location":"rest-references/#example-curl_12","title":"Example cURL","text":"<pre><code> curl --location --request PATCH 'host/api/recipe/1/favorite' --header 'X-Auth-Header: X_AUTH_HEADER'\n</code></pre>"},{"location":"rest-references/#get-recipe-by-pk","title":"Get recipe by pk","text":"GET /api/recipe/int:pk/"},{"location":"rest-references/#parameters_3","title":"Parameters","text":"name type data type description <code>&lt;int:pk&gt;</code> <code>path (required)</code> <code>int</code> <code>Recipe primary key to be updated</code>"},{"location":"rest-references/#headers_12","title":"Headers","text":"name type data type description <code>X-Auth-Header</code> <code>required</code> <code>UUID</code> <code>Header used for authentication with the API</code>"},{"location":"rest-references/#responses_13","title":"Responses","text":"http code content-type response <code>200</code> <code>application/json</code> <code>{recipe.Recipe object}</code> <code>403</code> <code>application/json</code> <code>{\"detail\":\"You must use authentication header\"}</code> <code>404</code> <code>application/json</code> {\"detail\":\"No Recipe matches the given query.\"}"},{"location":"rest-references/#example-curl_13","title":"Example cURL","text":"<pre><code> curl --location --request GET 'host/api/recipe/1/' --header 'X-Auth-Header: X_AUTH_HEADER\n</code></pre>"},{"location":"rest-references/#create-recipe","title":"Create recipe","text":"POST /api/recipe/"},{"location":"rest-references/#payload_6","title":"Payload","text":"recipe.Recipe object<pre><code>{\n    \"image\": file,\n    \"name\": string,\n    \"serves\": int,\n    \"description\": string,\n    \"difficulty\": string (DIFFICULTY_CHOICES),\n    \"chef\": string\n    \"video\": file (optional),\n    \"category\": &lt;int:pk&gt; (optional),\n    \"tag\": &lt;int:pk&gt; (optional), \n    \"prep_time\": int,\n    \"cook_time\": int\n}\n</code></pre>"},{"location":"rest-references/#dificulty-choices-difficulty_choices","title":"Dificulty choices (DIFFICULTY_CHOICES)","text":"recipe.Recipe.DIFFICULTY_CHOICES (use only the key in the request)<pre><code>    ('Easy', 'Easy'),\n    ('Intermediate', 'Intermediate'),\n    ('Advanced', 'Advanced'),\n    ('Expert', 'Expert'),\n</code></pre>"},{"location":"rest-references/#headers_13","title":"Headers","text":"name type data type description <code>Authorization</code> <code>required</code> <code>Access Token</code> <code>Token obtained from login endpoint</code> <code>Content-Type</code> <code>multipart/form-data</code> <code>Recipe object</code> <code>Recipe multipart/form-data object</code>"},{"location":"rest-references/#responses_14","title":"Responses","text":"http code content-type response <code>201</code> <code>application/json</code> <code>{recipe.Recipe object}</code> <code>400</code> <code>application/json</code> <code>{\"tag\":[\"Incorrect type. message\"]}</code> <code>401</code> <code>application/json</code> <code>{\"detail\":\"Authentication credentials were not provided.\"}</code>"},{"location":"rest-references/#example-curl_14","title":"Example cURL","text":"<pre><code> curl --location 'host/api/recipe/' --header 'Authorization: Token token_value' --form  'image=@\"/path/image.jpg\"' --form 'name=\"Recipe name\"' --form 'servings=\"5\"' --form 'category=\"1\"' --form 'tag=\"1\"' --form 'prep_time=\"20\"' --form 'video=@\"/path/video.mp4\"' --form 'description=\"This is cool recipe\"' --form 'cook_time=\"45\"'\n</code></pre>"},{"location":"rest-references/#update-recipe-main-info-without-ingredients-and-steps","title":"Update recipe main info (without ingredients and steps)","text":"PUT /api/recipe/int:pk"},{"location":"rest-references/#payload_7","title":"Payload","text":"recipe.Recipe object<pre><code>{\n    \"image\": file,\n    \"name\": string,\n    \"serves\": int,\n    \"description\": string,\n    \"difficulty\": string (DIFFICULTY_CHOICES),\n    \"chef\": string\n    \"video\": file (optional),\n    \"category\": &lt;int:pk&gt; (optional),\n    \"tag\": &lt;int:pk&gt; (optional), \n    \"prep_time\": int,\n    \"cook_time\": int,\n    \"clear_video\": boolean (optional if you want to delete already set video)\n}\n</code></pre>"},{"location":"rest-references/#parameters_4","title":"Parameters","text":"name type data type description <code>&lt;int:pk&gt;</code> <code>path (required)</code> <code>int</code> <code>Recipe primary key to be updated</code>"},{"location":"rest-references/#headers_14","title":"Headers","text":"name type data type description <code>Authorization</code> <code>required</code> <code>Access Token</code> <code>Token obtained from login endpoint</code> <code>Content-Type</code> <code>multipart/form-data</code> <code>Recipe object</code> <code>Recipe multipart/form-data object</code>"},{"location":"rest-references/#responses_15","title":"Responses","text":"http code content-type response <code>200</code> <code>application/json</code> <code>{recipe.Recipe object}</code> <code>400</code> <code>application/json</code> <code>{\"tag\":[\"Incorrect type. message\"]}</code> <code>401</code> <code>application/json</code> <code>{\"detail\":\"Authentication credentials were not provided.\"}</code>"},{"location":"rest-references/#example-curl_15","title":"Example cURL","text":"<pre><code> curl --location --request PUT 'host/api/recipe/1' --header 'Authorization: Token token_value' --form  'image=@\"/path/image.jpg\"' --form 'name=\"Recipe name\"' --form 'servings=\"5\"' --form 'category=\"1\"' --form 'tag=\"1\"' --form 'prep_time=\"20\"' --form 'video=@\"/path/video.mp4\"' --form 'description=\"This is cool recipe\"' --form 'cook_time=\"45\"'\n</code></pre>"},{"location":"rest-references/#delete-recipes","title":"Delete recipes","text":"DELETE /api/recipe/pk:int/"},{"location":"rest-references/#parameters_5","title":"Parameters","text":"name type data type description <code>&lt;int:pk&gt;</code> <code>path (required)</code> <code>int</code> <code>Recipe primary key to be deleted</code>"},{"location":"rest-references/#headers_15","title":"Headers","text":"name type data type description <code>Authorization</code> <code>required</code> <code>Access Token</code> <code>Token obtained from login endpoint</code>"},{"location":"rest-references/#responses_16","title":"Responses","text":"http code content-type response <code>204</code> <code>application/json</code> <code>401</code> <code>application/json</code> <code>{\"detail\":\"Authentication credentials were not provided.\"}</code>"},{"location":"rest-references/#example-curl_16","title":"Example cURL","text":"<pre><code> curl --location --request DELETE 'host/api/recipe/&lt;int:pk&gt;/' --header 'Authorization: Token token_value' \n</code></pre>"},{"location":"rest-references/#category","title":"Category","text":""},{"location":"rest-references/#get-all-categories","title":"Get all categories","text":"GET /api/recipe/category"},{"location":"rest-references/#headers_16","title":"Headers","text":"name type data type description <code>X-Auth-Header</code> <code>required</code> <code>UUID</code> <code>Header used for authentication with the API</code>"},{"location":"rest-references/#responses_17","title":"Responses","text":"http code content-type response <code>200</code> <code>application/json</code> <code>[recipe.Category objects list]</code> <code>403</code> <code>application/json</code> <code>{\"detail\":\"You must use authentication header\"}</code>"},{"location":"rest-references/#example-curl_17","title":"Example cURL","text":"<pre><code> curl --location 'host/api/recipe/category' --header 'X-Auth-Header: X_AUTH_HEADER'\n</code></pre>"},{"location":"rest-references/#get-all-categories-recipes","title":"Get all categories recipes","text":"GET /api/recipe/category/int:pk/recipes"},{"location":"rest-references/#parameters_6","title":"Parameters","text":"name type data type description <code>&lt;int:pk&gt;</code> <code>path (required)</code> <code>int</code> <code>Category primary key</code>"},{"location":"rest-references/#headers_17","title":"Headers","text":"name type data type description <code>X-Auth-Header</code> <code>required</code> <code>UUID</code> <code>Header used for authentication with the API</code>"},{"location":"rest-references/#responses_18","title":"Responses","text":"http code content-type response <code>200</code> <code>application/json</code> <code>[recipe.Recipe objects list]</code> <code>403</code> <code>application/json</code> <code>{\"detail\":\"You must use authentication header\"}</code>"},{"location":"rest-references/#example-curl_18","title":"Example cURL","text":"<pre><code> curl --location 'host/api/recipe/category/1/recipes' --header 'X-Auth-Header: X_AUTH_HEADER'\n</code></pre>"},{"location":"rest-references/#create-category","title":"Create category","text":"POST /api/recipe/category/add"},{"location":"rest-references/#payload_8","title":"Payload","text":"recipe.Category object<pre><code>{\n    \"name\": string\n}\n</code></pre>"},{"location":"rest-references/#headers_18","title":"Headers","text":"name type data type description <code>Authorization</code> <code>required</code> <code>Access Token</code> <code>Token obtained from login endpoint</code> <code>Content-Type</code> <code>application/json</code> `Applicaton Json content header"},{"location":"rest-references/#responses_19","title":"Responses","text":"http code content-type response <code>201</code> <code>application/json</code> <code>{recipe.Category object}</code> <code>400</code> <code>application/json</code> <code>{\"tag\":[\"Incorrect type. message\"]}</code> <code>401</code> <code>application/json</code> <code>{\"detail\":\"Authentication credentials were not provided.\"}</code>"},{"location":"rest-references/#example-curl_19","title":"Example cURL","text":"<pre><code> curl --location 'host/api/recipe/category/add' --header 'Authorization: Token token_value' --data '{\"name\":\"Greek\"}'\n</code></pre>"},{"location":"rest-references/#update-category","title":"Update category","text":"PUT /api/recipe/category/int:pk"},{"location":"rest-references/#payload_9","title":"Payload","text":"recipe.Category object<pre><code>{\n    \"name\": string,\n\n}\n</code></pre>"},{"location":"rest-references/#parameters_7","title":"Parameters","text":"name type data type description <code>&lt;int:pk&gt;</code> <code>path (required)</code> <code>int</code> <code>Category primary key</code>"},{"location":"rest-references/#headers_19","title":"Headers","text":"name type data type description <code>Authorization</code> <code>required</code> <code>Access Token</code> <code>Token obtained from login endpoint</code> <code>Content-Type</code> <code>application/json</code> `Applicaton Json content header"},{"location":"rest-references/#responses_20","title":"Responses","text":"http code content-type response <code>200</code> <code>application/json</code> <code>{recipe.Recipe object}</code> <code>401</code> <code>application/json</code> <code>{\"detail\":\"Authentication credentials were not provided.\"}</code> <code>404</code> <code>application/json</code> <code>{\"detail\":\"No Category matches the given query.\"}</code>"},{"location":"rest-references/#example-curl_20","title":"Example cURL","text":"<pre><code> curl --location --request PUT 'host/api/recipe/category/6' --header 'Authorization: Token token_value'  --header 'Content-Type: application/json'  --data '{\"name\":\"Italiano\"}'\n</code></pre>"},{"location":"rest-references/#tag","title":"Tag","text":""},{"location":"rest-references/#get-all-tags","title":"Get all tags","text":"GET /api/recipe/tags"},{"location":"rest-references/#headers_20","title":"Headers","text":"name type data type description <code>X-Auth-Header</code> <code>required</code> <code>UUID</code> <code>Header used for authentication with the API</code>"},{"location":"rest-references/#responses_21","title":"Responses","text":"http code content-type response <code>200</code> <code>application/json</code> <code>[recipe.Tag objects list]</code> <code>403</code> <code>application/json</code> <code>{\"detail\":\"You must use authentication header\"}</code>"},{"location":"rest-references/#example-curl_21","title":"Example cURL","text":"<pre><code> curl --location 'host/api/recipe/tags' --header 'X-Auth-Header: X_AUTH_HEADER'\n</code></pre>"},{"location":"rest-references/#get-all-recipes-from-tag","title":"Get all recipes from tag","text":"GET /api/recipe/tag/int:pk/recipes"},{"location":"rest-references/#parameters_8","title":"Parameters","text":"name type data type description <code>&lt;int:pk&gt;</code> <code>path (required)</code> <code>int</code> <code>Tag primary key</code>"},{"location":"rest-references/#headers_21","title":"Headers","text":"name type data type description <code>X-Auth-Header</code> <code>required</code> <code>UUID</code> <code>Header used for authentication with the API</code>"},{"location":"rest-references/#responses_22","title":"Responses","text":"http code content-type response <code>200</code> <code>application/json</code> <code>{\"count\":int,\"next\":string,\"previous\":string,\"results\":[recipe.Recipe obj list]}</code> <code>403</code> <code>application/json</code> <code>{\"detail\":\"You must use authentication header\"}</code>"},{"location":"rest-references/#example-curl_22","title":"Example cURL","text":"<pre><code> curl --location 'host/api/recipe/tag/&lt;int:pk&gt;/recipes' --header 'X-Auth-Header: X_AUTH_HEADER'\n</code></pre>"},{"location":"rest-references/#create-tag","title":"Create tag","text":"POST /api/recipe/tag/add"},{"location":"rest-references/#payload_10","title":"Payload","text":"recipe.Tag object<pre><code>{\n    \"name\": string\n}\n</code></pre>"},{"location":"rest-references/#headers_22","title":"Headers","text":"name type data type description <code>Authorization</code> <code>required</code> <code>Access Token</code> <code>Token obtained from login endpoint</code> <code>Content-Type</code> <code>application/json</code> `Applicaton Json content header"},{"location":"rest-references/#responses_23","title":"Responses","text":"http code content-type response <code>201</code> <code>application/json</code> <code>{recipe.Category object}</code> <code>400</code> <code>application/json</code> <code>{\"tag\":[\"Incorrect type. message\"]}</code> <code>401</code> <code>application/json</code> <code>{\"detail\":\"Authentication credentials were not provided.\"}</code>"},{"location":"rest-references/#example-curl_23","title":"Example cURL","text":"<pre><code> curl --location 'host/api/recipe/tag/add' --header 'Authorization: Token token_value' --data '{\"name\":\"Summer vibes\"}'\n</code></pre>"},{"location":"rest-references/#update-tag","title":"Update tag","text":"PUT /api/recipe/tag/int:pk"},{"location":"rest-references/#payload_11","title":"Payload","text":"recipe.Category object<pre><code>{\n    \"name\": string,\n\n}\n</code></pre>"},{"location":"rest-references/#parameters_9","title":"Parameters","text":"name type data type description <code>&lt;int:pk&gt;</code> <code>path (required)</code> <code>int</code> <code>Tag primary key</code>"},{"location":"rest-references/#headers_23","title":"Headers","text":"name type data type description <code>Authorization</code> <code>required</code> <code>Access Token</code> <code>Token obtained from login endpoint</code> <code>Content-Type</code> <code>application/json</code> `Applicaton Json content header"},{"location":"rest-references/#responses_24","title":"Responses","text":"http code content-type response <code>200</code> <code>application/json</code> <code>{recipe.Tag object}</code> <code>401</code> <code>application/json</code> <code>{\"detail\":\"Authentication credentials were not provided.\"}</code> <code>404</code> <code>application/json</code> <code>{\"detail\":\"No Category matches the given query.\"}</code>"},{"location":"rest-references/#example-curl_24","title":"Example cURL","text":"<pre><code> curl --location --request PUT 'host/api/recipe/tag/1' --header 'Authorization: Token token_value'  --header 'Content-Type: application/json'  --data '{\"name\":\"Summer Vibes\"}'\n</code></pre>"},{"location":"rest-references/#ingredients","title":"Ingredients","text":"POST /api/recipe/int:pk/ingredients Info <p>Override already existing ingredients for the recipe</p>"},{"location":"rest-references/#payload_12","title":"Payload","text":"recipe.Igredient object list<pre><code>[\n    {\n        \"name\": \"string,\n        \"quantity\": string,\n        \"metric\": \"string\n    },\n    {\n        \"name\": \"string,\n        \"quantity\": string,\n        \"metric\": \"string\n    },\n....\n]\n</code></pre>"},{"location":"rest-references/#parameters_10","title":"Parameters","text":"name type data type description <code>&lt;int:pk&gt;</code> <code>path (required)</code> <code>int</code> <code>Recipe primary key to which to link the ingredients</code>"},{"location":"rest-references/#headers_24","title":"Headers","text":"name type data type description <code>Authorization</code> <code>required</code> <code>Access Token</code> <code>Token obtained from login endpoint</code> <code>Content-Type</code> <code>application/json</code> `Applicaton Json content header"},{"location":"rest-references/#responses_25","title":"Responses","text":"http code content-type response <code>201</code> <code>application/json</code> <code>[{recipe.Ingrediant object}]</code> <code>400</code> <code>application/json</code> <code>{\"tag\":[\"Incorrect type. message\"]}</code> <code>401</code> <code>application/json</code> <code>{\"detail\":\"Authentication credentials were not provided.\"}</code>"},{"location":"rest-references/#example-curl_25","title":"Example cURL","text":"<pre><code> curl --location 'host/api/recipe/ingredients' --header 'Authorization: Token token_value' --data '[{\"name\":\"Kasher salt\",\"quantity\":\"1/5\",\"metric\":\"tbsp\",\"recipe\":24}]'\n</code></pre>"},{"location":"rest-references/#steps","title":"Steps","text":"POST /api/recipe/int:pk/steps Info <p>Override already existing steps for the recipe</p>"},{"location":"rest-references/#payload_13","title":"Payload","text":"recipe.Step object list<pre><code>[\n    {\n        \"text\": string\n    },\n    {\n        \"text\": string\n    },\n....\n]\n</code></pre>"},{"location":"rest-references/#parameters_11","title":"Parameters","text":"name type data type description <code>&lt;int:pk&gt;</code> <code>path (required)</code> <code>int</code> <code>Recipe primary key to which to link the steps</code>"},{"location":"rest-references/#headers_25","title":"Headers","text":"name type data type description <code>Authorization</code> <code>required</code> <code>Access Token</code> <code>Token obtained from login endpoint</code> <code>Content-Type</code> <code>application/json</code> `Applicaton Json content header"},{"location":"rest-references/#responses_26","title":"Responses","text":"http code content-type response <code>201</code> <code>application/json</code> <code>[{recipe.Step object}]</code> <code>400</code> <code>application/json</code> <code>{\"tag\":[\"Incorrect type. message\"]}</code> <code>401</code> <code>application/json</code> <code>{\"detail\":\"Authentication credentials were not provided.\"}</code>"},{"location":"rest-references/#example-curl_26","title":"Example cURL","text":"<pre><code> curl --location 'host/api/recipe/ingredients' --header 'Authorization: Token token_value' --data '[{\"text\":\"Heat the oven\",\"recipe\":1}]'\n</code></pre>"},{"location":"rest-references/#authentication_1","title":"Authentication","text":""},{"location":"rest-references/#create-admin-user_1","title":"Create admin user","text":"POST /api/auth/signup"},{"location":"rest-references/#payload_14","title":"Payload","text":"authentication.UserSerializer<pre><code>{\n    \"username\": \"username\",\n    \"password\": \"password\",\n    \"is_superuser\": true\n}\n</code></pre>"},{"location":"rest-references/#headers_26","title":"Headers","text":"name type data type description <code>X-Auth-Header</code> <code>required</code> <code>UUID</code> <code>Header used for authentication with the API</code>"},{"location":"rest-references/#responses_27","title":"Responses","text":"http code content-type response <code>201</code> <code>application/json</code> <code>User created successfully</code> <code>400</code> <code>application/json</code> <code>{\"username\":[\"user with this username already exists.\"]}</code>"},{"location":"rest-references/#example-curl_27","title":"Example cURL","text":"<pre><code> curl --location 'host/api/auth/signup' --header 'X-Auth-Header: X_AUTH_HEADER' --header 'Content-Type: application/json' --data '{\"username\":\"username\",\"password\":\"password\",\"is_superuser\":true}'\n</code></pre>"},{"location":"rest-references/#obtain-access-token_1","title":"Obtain access token","text":"POST /api/auth/token"},{"location":"rest-references/#payload_15","title":"Payload","text":"authentication.UserSerializer<pre><code>{\n    \"username\": \"username\",\n    \"password\": \"password\"\n}\n</code></pre>"},{"location":"rest-references/#headers_27","title":"Headers","text":"name type data type description <code>X-Auth-Header</code> <code>required</code> <code>UUID</code> <code>Header used for authentication with the API</code>"},{"location":"rest-references/#responses_28","title":"Responses","text":"http code content-type response <code>200</code> <code>application/json</code> <code>{\"token\":\"token\",\"user\":{\"username\":\"username\",\"is_superuser\":true}}</code> <code>404</code> <code>application/json</code> <code>{\"detail\":\"No User matches the given query.\"}</code> <code>403</code> <code>application/json</code> <code>{\"detail\": \"You must use authentication header\"}</code>"},{"location":"rest-references/#example-curl_28","title":"Example cURL","text":"<pre><code> `curl --location 'host/api/auth/token' --header 'X-Auth-Header: X_AUTH_HEADER' --header 'Content-Type: application/json' --data '{\"username\":\"username\",\"password\":\"password\"}''\n</code></pre>"},{"location":"rest-references/#recipe_1","title":"Recipe","text":""},{"location":"rest-references/#search-for-recipes_1","title":"Search for recipes","text":"GET /api/recipe/home/"},{"location":"rest-references/#parameters_12","title":"Parameters","text":"name type data type description <code>search</code> <code>query (optional)</code> <code>string</code> <code>Part or fulll name of the recipe.Recipe object</code> <code>page</code> <code>query (optional)</code> <code>int</code> <code>Page number if there a mutilple pages result</code>"},{"location":"rest-references/#headers_28","title":"Headers","text":"name type data type description <code>X-Auth-Header</code> <code>required</code> <code>UUID</code> <code>Header used for authentication with the API</code>"},{"location":"rest-references/#responses_29","title":"Responses","text":"http code content-type response <code>200</code> <code>application/json</code> <code>{\"count\":int,\"next\":string,\"previous\":string,\"results\":[recipe.Recipe obj list]}</code> <code>403</code> <code>application/json</code> <code>{\"detail\":\"You must use authentication header\"}</code>"},{"location":"rest-references/#example-curl_29","title":"Example cURL","text":"<pre><code> curl --location 'http://host:port/api/recipe/home/?name=name&amp;page=1' --header 'X-Auth-Header: X_AUTH_HEADER\n</code></pre>"},{"location":"rest-references/#get-favorite-recipes_1","title":"Get favorite recipes","text":"GET /api/recipe/home/favorites/"},{"location":"rest-references/#headers_29","title":"Headers","text":"name type data type description <code>X-Auth-Header</code> <code>required</code> <code>UUID</code> <code>Header used for authentication with the API</code>"},{"location":"rest-references/#responses_30","title":"Responses","text":"http code content-type response <code>200</code> <code>application/json</code> <code>{\"count\":int,\"next\":string,\"previous\":string,\"results\":[recipe.Recipe obj list]}</code> <code>404</code> <code>application/json</code> <code>{\"detail\":\"No Recipe matches the given query.\"}</code> <code>403</code> <code>application/json</code> <code>{\"detail\":\"You must use authentication header\"}</code>"},{"location":"rest-references/#example-curl_30","title":"Example cURL","text":"<pre><code> curl --location 'http://host:port/api/recipe/home/favorites/' --header 'X-Auth-Header: X_AUTH_HEADER\n</code></pre>"},{"location":"rest-references/#get-trending-recipes_1","title":"Get trending recipes","text":"GET /api/recipe/trending"},{"location":"rest-references/#headers_30","title":"Headers","text":"name type data type description <code>X-Auth-Header</code> <code>required</code> <code>UUID</code> <code>Header used for authentication with the API</code>"},{"location":"rest-references/#responses_31","title":"Responses","text":"http code content-type response <code>200</code> <code>application/json</code> <code>[recipe.Recipe objects list]</code> <code>403</code> <code>application/json</code> <code>{\"detail\":\"You must use authentication header\"}</code>"},{"location":"rest-references/#example-curl_31","title":"Example cURL","text":"<pre><code> curl --location 'localhost:8080/api/recipe/trending' --header 'X-Auth-Header: X_AUTH_HEADER\n</code></pre>"},{"location":"rest-references/#update-favorite-status_1","title":"Update favorite status","text":"PATCH /api/recipe/int:pk/favorite"},{"location":"rest-references/#parameters_13","title":"Parameters","text":"name type data type description <code>&lt;int:pk&gt;</code> <code>path (required)</code> <code>int</code> <code>Recipe primary key to be favorited or unfavorited</code>"},{"location":"rest-references/#headers_31","title":"Headers","text":"name type data type description <code>Authorization</code> <code>required</code> <code>Access Token</code> <code>Token obtained from login endpoint example \"token 443c104be8c6daeeaf86df634e69b97668b99900\"</code>"},{"location":"rest-references/#responses_32","title":"Responses","text":"http code content-type response <code>201</code> <code>application/json</code> <code>\"Success favorite recipe\"</code> <code>201</code> <code>application/json</code> <code>\"Success unfavorite recipe\"</code> <code>403</code> <code>application/json</code> `{\"detail\":\"You must use authentication header\"} <code>404</code> <code>application/json</code> <code>Not Found</code>"},{"location":"rest-references/#example-curl_32","title":"Example cURL","text":"<pre><code> curl --location --request PATCH 'host/api/recipe/1/favorite' --header 'X-Auth-Header: X_AUTH_HEADER'\n</code></pre>"},{"location":"rest-references/#create-recipe_1","title":"Create recipe","text":"POST /api/recipe/"},{"location":"rest-references/#payload_16","title":"Payload","text":"recipe.Recipe object<pre><code>{\n    \"image\": file,\n    \"name\": string,\n    \"serves\": int,\n    \"video\": file (optional),\n    \"category\": &lt;int:pk&gt;,\n    \"tag\": &lt;int:pk&gt;,\n    \"prep_time\": int,\n}\n</code></pre>"},{"location":"rest-references/#headers_32","title":"Headers","text":"name type data type description <code>Authorization</code> <code>required</code> <code>Access Token</code> <code>Token obtained from login endpoint example \"token 443c104be8c6daeeaf86df634e69b97668b99900\"</code> <code>Content-Type</code> <code>multipart/form-data</code> <code>Recipe object</code> <code>Recipe multipart/form-data object</code>"},{"location":"rest-references/#responses_33","title":"Responses","text":"http code content-type response <code>201</code> <code>application/json</code> <code>{recipe.Recipe object}</code> <code>400</code> <code>application/json</code> <code>{\"tag\":[\"Incorrect type. message\"]}</code> <code>401</code> <code>application/json</code> <code>{\"detail\":\"Authentication credentials were not provided.\"}</code>"},{"location":"rest-references/#example-curl_33","title":"Example cURL","text":"<pre><code> curl --location 'localhost:8080/api/recipe/'  --header 'Authorization: Token d8916a5f6cf16d2c6a87bc7461bc4680245609f0' --form 'image=@\"/path/image.jpg\"' --form 'name=\"Test recipe creation\"' --form 'serves=\"5\"' --form 'category=\"1\"' --form 'tag=1' --form 'prep_time=\"45\"'\n</code></pre>"},{"location":"rest-references/#update-recipe-main-info-without-ingredients-and-steps_1","title":"Update recipe main info (without ingredients and steps)","text":"PUT /api/recipe/int:pk"},{"location":"rest-references/#payload_17","title":"Payload","text":"recipe.Recipe object<pre><code>{\n    \"image\": file,\n    \"name\": string,\n    \"serves\": int,\n    \"video\": file (optional),\n    \"category\": &lt;int:pk&gt;,\n    \"tag\": &lt;int:pk&gt;,\n    \"prep_time\": int,\n}\n</code></pre>"},{"location":"rest-references/#parameters_14","title":"Parameters","text":"name type data type description <code>&lt;int:pk&gt;</code> <code>path (required)</code> <code>int</code> <code>Recipe primary key to be updated</code>"},{"location":"rest-references/#headers_33","title":"Headers","text":"name type data type description <code>Authorization</code> <code>required</code> <code>Access Token</code> <code>Token obtained from login endpoint example \"token 443c104be8c6daeeaf86df634e69b97668b99900\"</code> <code>Content-Type</code> <code>multipart/form-data</code> <code>Recipe object</code> <code>Recipe multipart/form-data object</code>"},{"location":"rest-references/#responses_34","title":"Responses","text":"http code content-type response <code>200</code> <code>application/json</code> <code>{recipe.Recipe object}</code> <code>400</code> <code>application/json</code> <code>{\"tag\":[\"Incorrect type. message\"]}</code> <code>401</code> <code>application/json</code> <code>{\"detail\":\"Authentication credentials were not provided.\"}</code>"},{"location":"rest-references/#example-curl_34","title":"Example cURL","text":"<pre><code> curl --location --request PUT 'host/api/recipe/1' --header 'Authorization: Token d8916a5f6cf16d2c6a87bc7461bc4680245609f0' --form 'image=@\"/path/image.jpg\"' --form 'name=\"Update name\"' --form 'serves=\"4\"' --form 'category=\"1\"' --form 'tag=\"1\"' --form 'prep_time=\"21\"'\n</code></pre>"},{"location":"rest-references/#delete-recipes_1","title":"Delete recipes","text":"DELETE /api/recipe/pk:int/"},{"location":"rest-references/#parameters_15","title":"Parameters","text":"name type data type description <code>&lt;int:pk&gt;</code> <code>path (required)</code> <code>int</code> <code>Recipe primary key to be deleted</code>"},{"location":"rest-references/#headers_34","title":"Headers","text":"name type data type description <code>Authorization</code> <code>required</code> <code>Access Token</code> <code>Token obtained from login endpoint example \"token 443c104be8c6daeeaf86df634e69b97668b99900\"</code>"},{"location":"rest-references/#responses_35","title":"Responses","text":"http code content-type response <code>204</code> <code>application/json</code> <code>401</code> <code>application/json</code> <code>{\"detail\":\"Authentication credentials were not provided.\"}</code>"},{"location":"rest-references/#example-curl_35","title":"Example cURL","text":"<pre><code> curl --location --request DELETE 'host/api/recipe/&lt;int:pk&gt;/' --header 'Authorization: Token d8916a5f6cf16d2c6a87bc7461bc4680245609f0' \n</code></pre>"},{"location":"rest-references/#category_1","title":"Category","text":""},{"location":"rest-references/#get-all-categories_1","title":"Get all categories","text":"GET /api/recipe/category"},{"location":"rest-references/#headers_35","title":"Headers","text":"name type data type description <code>X-Auth-Header</code> <code>required</code> <code>UUID</code> <code>Header used for authentication with the API</code>"},{"location":"rest-references/#responses_36","title":"Responses","text":"http code content-type response <code>200</code> <code>application/json</code> <code>[recipe.Category objects list]</code> <code>403</code> <code>application/json</code> <code>{\"detail\":\"You must use authentication header\"}</code>"},{"location":"rest-references/#example-curl_36","title":"Example cURL","text":"<pre><code> curl --location 'host/api/recipe/category' --header 'X-Auth-Header: X_AUTH_HEADER'\n</code></pre>"},{"location":"rest-references/#get-all-categories-recipes_1","title":"Get all categories recipes","text":"GET /api/recipe/category/int:pk/recipes"},{"location":"rest-references/#parameters_16","title":"Parameters","text":"name type data type description <code>&lt;int:pk&gt;</code> <code>path (required)</code> <code>int</code> <code>Category primary key</code>"},{"location":"rest-references/#headers_36","title":"Headers","text":"name type data type description <code>X-Auth-Header</code> <code>required</code> <code>UUID</code> <code>Header used for authentication with the API</code>"},{"location":"rest-references/#responses_37","title":"Responses","text":"http code content-type response <code>200</code> <code>application/json</code> <code>[recipe.Recipe objects list]</code> <code>403</code> <code>application/json</code> <code>{\"detail\":\"You must use authentication header\"}</code>"},{"location":"rest-references/#example-curl_37","title":"Example cURL","text":"<pre><code> curl --location 'host/api/recipe/category/1/recipes' --header 'X-Auth-Header: X_AUTH_HEADER'\n</code></pre>"},{"location":"rest-references/#create-category_1","title":"Create category","text":"POST /api/recipe/category/add"},{"location":"rest-references/#payload_18","title":"Payload","text":"recipe.Category object<pre><code>{\n    \"name\": string\n}\n</code></pre>"},{"location":"rest-references/#headers_37","title":"Headers","text":"name type data type description <code>Authorization</code> <code>required</code> <code>Access Token</code> <code>Token obtained from login endpoint example \"token 443c104be8c6daeeaf86df634e69b97668b99900\"</code> <code>Content-Type</code> <code>application/json</code> `Applicaton Json content header"},{"location":"rest-references/#responses_38","title":"Responses","text":"http code content-type response <code>201</code> <code>application/json</code> <code>{recipe.Category object}</code> <code>400</code> <code>application/json</code> <code>{\"tag\":[\"Incorrect type. message\"]}</code> <code>401</code> <code>application/json</code> <code>{\"detail\":\"Authentication credentials were not provided.\"}</code>"},{"location":"rest-references/#example-curl_38","title":"Example cURL","text":"<pre><code> curl --location 'host/api/recipe/category/add' --header 'Authorization: token 443c104be8c6daeeaf86df634e69b97668b99900' --data '{\"name\":\"Greek\"}'\n</code></pre>"},{"location":"rest-references/#update-category_1","title":"Update category","text":"PUT /api/recipe/category/int:pk"},{"location":"rest-references/#payload_19","title":"Payload","text":"recipe.Category object<pre><code>{\n    \"name\": string,\n\n}\n</code></pre>"},{"location":"rest-references/#parameters_17","title":"Parameters","text":"name type data type description <code>&lt;int:pk&gt;</code> <code>path (required)</code> <code>int</code> <code>Category primary key</code>"},{"location":"rest-references/#headers_38","title":"Headers","text":"name type data type description <code>Authorization</code> <code>required</code> <code>Access Token</code> <code>Token obtained from login endpoint example \"token 443c104be8c6daeeaf86df634e69b97668b99900\"</code> <code>Content-Type</code> <code>application/json</code> `Applicaton Json content header"},{"location":"rest-references/#responses_39","title":"Responses","text":"http code content-type response <code>200</code> <code>application/json</code> <code>{recipe.Recipe object}</code> <code>401</code> <code>application/json</code> <code>{\"detail\":\"Authentication credentials were not provided.\"}</code> <code>404</code> <code>application/json</code> <code>{\"detail\":\"No Category matches the given query.\"}</code>"},{"location":"rest-references/#example-curl_39","title":"Example cURL","text":"<pre><code> curl --location --request PUT 'host/api/recipe/category/6' --header 'Authorization: token 443c104be8c6daeeaf86df634e69b97668b99900'  --header 'Content-Type: application/json'  --data '{\"name\":\"Italiano\"}'\n</code></pre>"},{"location":"rest-references/#tag_1","title":"Tag","text":""},{"location":"rest-references/#get-all-tags_1","title":"Get all tags","text":"GET /api/recipe/tags"},{"location":"rest-references/#headers_39","title":"Headers","text":"name type data type description <code>X-Auth-Header</code> <code>required</code> <code>UUID</code> <code>Header used for authentication with the API</code>"},{"location":"rest-references/#responses_40","title":"Responses","text":"http code content-type response <code>200</code> <code>application/json</code> <code>[recipe.Tag objects list]</code> <code>403</code> <code>application/json</code> <code>{\"detail\":\"You must use authentication header\"}</code>"},{"location":"rest-references/#example-curl_40","title":"Example cURL","text":"<pre><code> curl --location 'host/api/recipe/tags' --header 'X-Auth-Header: X_AUTH_HEADER'\n</code></pre>"},{"location":"rest-references/#get-all-recipes-from-tag_1","title":"Get all recipes from tag","text":"GET /api/recipe/tag/int:pk/recipes"},{"location":"rest-references/#parameters_18","title":"Parameters","text":"name type data type description <code>&lt;int:pk&gt;</code> <code>path (required)</code> <code>int</code> <code>Tag primary key</code>"},{"location":"rest-references/#headers_40","title":"Headers","text":"name type data type description <code>X-Auth-Header</code> <code>required</code> <code>UUID</code> <code>Header used for authentication with the API</code>"},{"location":"rest-references/#responses_41","title":"Responses","text":"http code content-type response <code>200</code> <code>application/json</code> <code>{\"count\":int,\"next\":string,\"previous\":string,\"results\":[recipe.Recipe obj list]}</code> <code>403</code> <code>application/json</code> <code>{\"detail\":\"You must use authentication header\"}</code>"},{"location":"rest-references/#example-curl_41","title":"Example cURL","text":"<pre><code> curl --location 'host/api/recipe/tag/&lt;int:pk&gt;/recipes' --header 'X-Auth-Header: X_AUTH_HEADER'\n</code></pre>"},{"location":"rest-references/#create-tag_1","title":"Create tag","text":"POST /api/recipe/tag/add"},{"location":"rest-references/#payload_20","title":"Payload","text":"recipe.Tag object<pre><code>{\n    \"name\": string\n}\n</code></pre>"},{"location":"rest-references/#headers_41","title":"Headers","text":"name type data type description <code>Authorization</code> <code>required</code> <code>Access Token</code> <code>Token obtained from login endpoint example \"token 443c104be8c6daeeaf86df634e69b97668b99900\"</code> <code>Content-Type</code> <code>application/json</code> `Applicaton Json content header"},{"location":"rest-references/#responses_42","title":"Responses","text":"http code content-type response <code>201</code> <code>application/json</code> <code>{recipe.Category object}</code> <code>400</code> <code>application/json</code> <code>{\"tag\":[\"Incorrect type. message\"]}</code> <code>401</code> <code>application/json</code> <code>{\"detail\":\"Authentication credentials were not provided.\"}</code>"},{"location":"rest-references/#example-curl_42","title":"Example cURL","text":"<pre><code> curl --location 'host/api/recipe/tag/add' --header 'Authorization: token 443c104be8c6daeeaf86df634e69b97668b99900' --data '{\"name\":\"Summer vibes\"}'\n</code></pre>"},{"location":"rest-references/#update-tag_1","title":"Update tag","text":"PUT /api/recipe/tag/int:pk"},{"location":"rest-references/#payload_21","title":"Payload","text":"recipe.Category object<pre><code>{\n    \"name\": string,\n\n}\n</code></pre>"},{"location":"rest-references/#parameters_19","title":"Parameters","text":"name type data type description <code>&lt;int:pk&gt;</code> <code>path (required)</code> <code>int</code> <code>Tag primary key</code>"},{"location":"rest-references/#headers_42","title":"Headers","text":"name type data type description <code>Authorization</code> <code>required</code> <code>Access Token</code> <code>Token obtained from login endpoint example \"token 443c104be8c6daeeaf86df634e69b97668b99900\"</code> <code>Content-Type</code> <code>application/json</code> `Applicaton Json content header"},{"location":"rest-references/#responses_43","title":"Responses","text":"http code content-type response <code>200</code> <code>application/json</code> <code>{recipe.Tag object}</code> <code>401</code> <code>application/json</code> <code>{\"detail\":\"Authentication credentials were not provided.\"}</code> <code>404</code> <code>application/json</code> <code>{\"detail\":\"No Category matches the given query.\"}</code>"},{"location":"rest-references/#example-curl_43","title":"Example cURL","text":"<pre><code> curl --location --request PUT 'host/api/recipe/tag/1' --header 'Authorization: token 443c104be8c6daeeaf86df634e69b97668b99900'  --header 'Content-Type: application/json'  --data '{\"name\":\"Summer Vibes\"}'\n</code></pre>"},{"location":"rest-references/#ingredients_1","title":"Ingredients","text":"POST /api/recipe/int:pk/ingredients Info <p>Override already existing ingredients for the recipe</p>"},{"location":"rest-references/#payload_22","title":"Payload","text":"recipe.Igredient object list<pre><code>[\n    {\n        \"name\": \"string,\n        \"quantity\": string,\n        \"metric\": \"string\n    },\n    {\n        \"name\": \"string,\n        \"quantity\": string,\n        \"metric\": \"string\n    },\n....\n]\n</code></pre>"},{"location":"rest-references/#parameters_20","title":"Parameters","text":"name type data type description <code>&lt;int:pk&gt;</code> <code>path (required)</code> <code>int</code> <code>Recipe primary key to which to link the ingredients</code>"},{"location":"rest-references/#headers_43","title":"Headers","text":"name type data type description <code>Authorization</code> <code>required</code> <code>Access Token</code> <code>Token obtained from login endpoint example \"token 443c104be8c6daeeaf86df634e69b97668b99900\"</code> <code>Content-Type</code> <code>application/json</code> `Applicaton Json content header"},{"location":"rest-references/#responses_44","title":"Responses","text":"http code content-type response <code>201</code> <code>application/json</code> <code>[{recipe.Ingrediant object}]</code> <code>400</code> <code>application/json</code> <code>{\"tag\":[\"Incorrect type. message\"]}</code> <code>401</code> <code>application/json</code> <code>{\"detail\":\"Authentication credentials were not provided.\"}</code>"},{"location":"rest-references/#example-curl_44","title":"Example cURL","text":"<pre><code> curl --location 'host/api/recipe/ingredients' --header 'Authorization: token 443c104be8c6daeeaf86df634e69b97668b99900' --data '[{\"name\":\"Kasher salt\",\"quantity\":\"1/5\",\"metric\":\"tbsp\",\"recipe\":24}]'\n</code></pre>"},{"location":"rest-references/#steps_1","title":"Steps","text":"POST /api/recipe/int:pk/steps Info <p>Override already existing steps for the recipe</p>"},{"location":"rest-references/#payload_23","title":"Payload","text":"recipe.Step object list<pre><code>[\n    {\n        \"text\": string\n    },\n    {\n        \"text\": string\n    },\n....\n]\n</code></pre>"},{"location":"rest-references/#parameters_21","title":"Parameters","text":"name type data type description <code>&lt;int:pk&gt;</code> <code>path (required)</code> <code>int</code> <code>Recipe primary key to which to link the steps</code>"},{"location":"rest-references/#headers_44","title":"Headers","text":"name type data type description <code>Authorization</code> <code>required</code> <code>Access Token</code> <code>Token obtained from login endpoint example \"token 443c104be8c6daeeaf86df634e69b97668b99900\"</code> <code>Content-Type</code> <code>application/json</code> `Applicaton Json content header"},{"location":"rest-references/#responses_45","title":"Responses","text":"http code content-type response <code>201</code> <code>application/json</code> <code>[{recipe.Step object}]</code> <code>400</code> <code>application/json</code> <code>{\"tag\":[\"Incorrect type. message\"]}</code> <code>401</code> <code>application/json</code> <code>{\"detail\":\"Authentication credentials were not provided.\"}</code>"},{"location":"rest-references/#example-curl_45","title":"Example cURL","text":"<pre><code> curl --location 'host/api/recipe/ingredients' --header 'Authorization: token 443c104be8c6daeeaf86df634e69b97668b99900' --data '[{\"text\":\"Heat the oven\",\"recipe\":1}]'\n</code></pre>"},{"location":"user-guide/","title":"User Guide","text":"<p>The documentation for ForkAPI contains number of sections that are listed bellow.</p> <ul> <li>Installation </li> <li>Make your first request</li> <li>Rest documentation</li> <li>Clients</li> <li>Contribution</li> </ul>"}]}